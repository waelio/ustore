import configStorage, { Config } from './storages/configStorage';
import cookieStorage from './storages/cookieStorage';
import gunStorage from './storages/gunStorage';
import idbStorage from './storages/idbStorage';
import memoryStorage from './storages/memoryStorage';
import piniaStorage, { createPinia, defineStore } from './storages/piniaStorage';
import secureStorage from './storages/secureStorage';
import { vuexStorage } from './storages/index';
import webqlStorage from './storages/webqlStorage';
import { localStorage } from "./storages/localStorage";
import { sessionStorage } from "./storages/sessionStorage";
import { app, createApp } from './storages/uStoreStorage';
export { Config };
export { app };
export { localStorage };
export { sessionStorage };
export { cookieStorage };
export { memoryStorage };
export { vuexStorage };
export { piniaStorage };
export { gunStorage };
export { secureStorage };
export { configStorage };
export { idbStorage };
export { webqlStorage };
export { createPinia, defineStore };
export { createApp };
export type TuStore = {
    local: typeof localStorage;
    session: typeof sessionStorage;
    cookie: typeof cookieStorage;
    memory: typeof memoryStorage;
    vuex: typeof vuexStorage;
    pinia: typeof piniaStorage;
    gun: typeof gunStorage;
    secure: typeof secureStorage;
    config: typeof configStorage;
    idb: typeof idbStorage;
    wsbl: typeof webqlStorage;
};
export declare const uStore: TuStore;
export default uStore;
//# sourceMappingURL=index.d.ts.map